<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>pytest on Jean Bilheux</title>
    <link>/tags/pytest/</link>
    <description>Recent content in pytest on Jean Bilheux</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Tue, 09 Jan 2018 00:00:00 -0500</lastBuildDate>
    
	<atom:link href="/tags/pytest/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Use of local file in unit test</title>
      <link>/post/call_local_file_in_unit_test/</link>
      <pubDate>Tue, 09 Jan 2018 00:00:00 -0500</pubDate>
      
      <guid>/post/call_local_file_in_unit_test/</guid>
      <description>I had some issue in one of my project when running my unit test from the command line and from my IDE. I could never have both happy at the same time. This was related to the way I was calling local file used in my unit tests.
Using the command line, I had to refer to the file using relative path, but the IDE was looking for full path (which is obviously wrong).</description>
    </item>
    
    <item>
      <title>pytest trick to run script before and after each test</title>
      <link>/post/pytest_trick/</link>
      <pubDate>Sat, 06 Jan 2018 00:00:00 -0500</pubDate>
      
      <guid>/post/pytest_trick/</guid>
      <description>I recently had to write a set of unit test that required some code to be executed before* and after each test. I found a few post that listed the wrong method name so here is how I did it.
import unittest def setUp(self): _file_path = os.path.dirname(__file__) self.data_path = os.path.abspath(os.path.join(_file_path, &#39;../data/&#39;)) self.export_folder = self.data_path + &#39;/temporary_folder/&#39; os.mkdir(self.export_folder) def tearDown(self): shutil.rmtree(self.export_folder) def test_export_create_the_right_file_name(self): &#39;&#39;&#39;assert export works for all data types for tif output&#39;&#39;&#39; sample_path = self.</description>
    </item>
    
  </channel>
</rss>