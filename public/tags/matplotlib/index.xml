<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>matplotlib on Jean Bilheux</title>
    <link>/tags/matplotlib/</link>
    <description>Recent content in matplotlib on Jean Bilheux</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Tue, 09 Jan 2018 00:00:00 -0500</lastBuildDate>
    
	<atom:link href="/tags/matplotlib/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Create a Target type tool in matplotlib</title>
      <link>/post/target_tool_in_matplotlib/</link>
      <pubDate>Tue, 09 Jan 2018 00:00:00 -0500</pubDate>
      
      <guid>/post/target_tool_in_matplotlib/</guid>
      <description>In one of my project, I had to select, for various images, the best center of a circular object. I came up with the following solution that, when used with the jupyter notebooks widgets, helps finding the best center of the object.
Here is such an image where we need to find the center. In this case, it&amp;rsquo;s pretty obvious, but in real cases it&amp;rsquo;s much more complicated so this tool should really help.</description>
    </item>
    
    <item>
      <title>How to add a title to a matplotlib figure inside a notebook</title>
      <link>/post/how_to_add_title_to_matplotlib_figure/</link>
      <pubDate>Mon, 08 Jan 2018 00:00:00 -0500</pubDate>
      
      <guid>/post/how_to_add_title_to_matplotlib_figure/</guid>
      <description>By default, matplotlib only provides an increment index to the figure title as shown here
_file_name = _files[index] fig, (ax0, ax1) = plt.subplots(ncols=2, figsize=(10,5)) #plt.title(os.path.basename(_files[index])) cax0 = ax0.imshow(_data[index], cmap=&#39;viridis&#39;, interpolation=None) ax0.set_title(&amp;quot;Before Correction&amp;quot;) _ = fig.colorbar(cax0, ax=ax0) # colorbar cax1 = ax1.imshow(_clean_data[index], cmap=&#39;viridis&#39;, interpolation=None) ax1.set_title(&amp;quot;After Correction&amp;quot;) _ = fig.colorbar(cax1, ax=ax1) # colorbar fig.tight_layout()  In order to provide a title to this plot, simply add a value to the flag num in plt.</description>
    </item>
    
  </channel>
</rss>